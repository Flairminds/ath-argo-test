---
# TODO: Merge this with github-arc.yaml after wrapper helm chart is created for github-arc
apiVersion: argoproj.io/v1alpha1
kind: ApplicationSet
metadata:
  name: github-arc-config
  namespace: argocd
spec:
  goTemplate: true
  generators:
    - list:
        elements:
          - cluster: "in-cluster" # Replace with your EKS cluster identifier if deploying to a different cluster
            url: "https://kubernetes.default.svc"
            values:
              deploymentName: "github-arc-config"
              team: "cicd"
              namespace: "github-runners"
              targetRevision: "1.0.19"
              githubArcServiceAccount: "github-arc-gha-rs-controller"
  template:
    metadata:
      name: '{{ .values.team }}-{{ .values.deploymentName }}'
    spec:
      project: '{{ .values.team }}'
      source:
        repoURL: "ghcr.io/luminartech/helm-charts-public"
        targetRevision: "{{ .values.targetRevision }}"
        chart: "common-res"
        helm:
          releaseName: "{{ .values.deploymentName }}"
          values: |
            Role:
              items:
                manager:
                  rules:
                    - apiGroups: ["rbac.authorization.k8s.io"]
                      resources: ["roles", "rolebindings"]
                      verbs: ["create", "get", "list", "watch", "update", "patch", "delete"]
                secret-reader:
                  rules:
                    - apiGroups: [""]
                      resources: ["secrets"]
                      verbs: ["get", "list"]
            RoleBinding:
              items:
                secret-reader:
                  subjects:
                    - kind: ServiceAccount
                      name: "{{ .values.githubArcServiceAccount }}"
                      namespace: "{{ .values.namespace }}"
                  roleRef:
                    kind: Role
                    name: "{{ .values.deploymentName }}-secret-reader"
                    apiGroup: rbac.authorization.k8s.io
                manager:
                  subjects:
                    - kind: ServiceAccount
                      name: "{{ .values.githubArcServiceAccount }}"
                      namespace: "{{ .values.namespace }}"
                  roleRef:
                    kind: Role
                    name: "{{ .values.deploymentName }}-manager"
                    apiGroup: rbac.authorization.k8s.io
      destination:
        server: '{{ .url }}'
        namespace: '{{ .values.namespace }}'
      syncPolicy:
        automated:
          prune: true
          selfHeal: true
        syncOptions:
          - CreateNamespace=true
          - ServerSideApply=true
      ignoreDifferences: []
  syncPolicy:
    preserveResourcesOnDeletion: false
