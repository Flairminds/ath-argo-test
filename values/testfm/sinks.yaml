---
## @section Global parameters
## Global parameters
## These variables are accessible to all dependency helm charts.
##

global:
  tags:
    billing-team: "connectors"
    billing-unit: "engineering"
    billing-cost-center: "testfm-usa"
    billing:project: "saas"
    billing:environment: "{{ .Values.global.environment }}"

  ## @param global.labels Define common labels for all IAC and app resources generated by this chart.
  ##
  labels:
    application-type: "sinks"
    application-class: "exclusive"
  ## @param global.annotations Define common annotations for all IAC and app resources generated by this chart.
  ##
  annotations: {}
  ## @param global.environment Application environment
  ##
  environment: 'dev'

## @section Charg configurations
##
common-res:
  ## @param common-res.enabled Toggle for enabling or disabling deployment resources.
  ##
  enabled: true
  Deployment:
    items:
      _:
        ## @skip common-res.Deployment.items._.annotations
        ##
        annotations:
          prometheus.io/scrape: "true"
          prometheus.io/path: /metrics
          prometheus.io/port: "9000"
        strategy:
          ## @param common-res.Deployment.items._.strategy.type Set the controller upgrade strategy
          ## For Deployments, valid values are Recreate (default) and RollingUpdate.
          ##
          type: "RollingUpdate"
          ## RollingUpdate strategy configuration
          ##
          rollingUpdate:
            ## @param common-res.Deployment.items._.strategy.rollingUpdate.maxUnavailable Set deployment RollingUpdate max unavailable
            ##
            maxUnavailable: "66%"
            ## @param common-res.Deployment.items._.strategy.rollingUpdate.maxSurge Set deployment RollingUpdate max surge
            ##
            maxSurge: "33%"

        ## @param common-res.Deployment.items._.selector Additional selectors for the deployment
        ##
        selector: {}

        ## Pod spec template (to generate spec.template)
        ##
        podSpec:
          spec:
            ## @param common-res.Deployment.items._.podSpec.spec.automountServiceAccountToken Automount Service account token
            ##
            automountServiceAccountToken: true

            ## @param common-res.Deployment.items._.podSpec.spec.terminateGracePeriodSeconds Termination grace period in seconds
            ##
            terminationGracePeriodSeconds: 172800

            ## @param common-res.Deployment.items._.podSpec.spec.imagePullSecrets Image pull secrets
            ##
            # imagePullSecrets: 

            ## @param common-res.Deployment.items._.podSpec.spec.serviceAccountName Service account name
            ##
            # serviceAccountName: '{{ include "common-gitops.names.release" . }}'
            ## TODO: Let each application have its own service account
            serviceAccountName: 'svc-testfm'

            ## @param common-res.Deployment.items._.podSpec.spec.restartPolicy Restart policy for the pod
            restartPolicy: Always

            ## Configure the Security Context for the Pod
            securityContext:
              ## @param common-res.Deployment.items._.podSpec.spec.securityContext.fsGroup Specify the default fs group id
              ##
              fsGroup: 99
              ## @param common-res.Deployment.items._.podSpec.spec.securityContext.supplementalGroups Specify the additional groups
              ##
              supplementalGroups: []
              ## @param common-res.Deployment.items._.podSpec.spec.securityContext.fsGroupChangePolicy Specify the default gs group change policy
              ##
              fsGroupChangePolicy: OnRootMismatch

            ## @skip common-res.Deployment.items._.podSpec.spec.tolerations
            ##
            tolerations:
              - key: "sinks-testfm-apps"
                operator: "Equal"
                value: "true"
                effect: "NoSchedule"
              - key: "sinks-testfm-apps"
                operator: "Equal"
                value: "true"
                effect: "NoExecute"

            ## @skip common-res.Deployment.items._.podSpec.spec.affinity
            ##
            affinity:
              podAntiAffinity:
                requiredDuringSchedulingIgnoredDuringExecution:
                  - labelSelector:
                      matchExpressions:
                        - key: application-type
                          operator: In
                          values:
                            - "sinks"
                    topologyKey: "kubernetes.io/hostname"
                  - labelSelector:
                      matchExpressions:
                        - key: application-class
                          operator: In
                          values:
                            - "exclusive"
                    topologyKey: "kubernetes.io/hostname"

            ## @skip common-res.Deployment.items._.podSpec.spec.nodeSelector
            ##
            nodeSelector:
              eks.amazonaws.com/nodegroup: Sinks-testfm-Apps

            ## Containers configuration
            containers:
              sink:
                ## @param common-res.Deployment.items._.podSpec.spec.containers.sink.image
                ##
                ## @section Default configurations
                image: "docker.io/testfm/kafka-connect-total-sink:3.2.0-SNAPSHOT_unify-src-sink-imgs_3_92a835ec13"

                ## @param common-res.Deployment.items._.podSpec.spec.containers.sink.imagePullPolicy Container image pullPolicy. Allowed values: `IfNotPresent`, `Always`, `Never`
                ##
                imagePullPolicy: 'IfNotPresent'

                ## @param common-res.Deployment.items._.podSpec.spec.containers.sink.lifecycle Container lifecycle hook
                ##
                lifecycle:
                  ## @param common-res.Deployment.items._.podSpec.spec.containers.sink.lifecycle.preStop PreStop lifecycle hook
                  ## @skip common-res.Deployment.items._.podSpec.spec.containers.sink.lifecycle.preStop.exec
                  preStop:
                    exec:
                      command:
                        - "/bin/bash"
                        - "-c"
                        - "/scripts/lifecycle_hook.sh | tee -a /tmp/lifecycle_hook.log"

                ## @param common-res.Deployment.items._.podSpec.spec.containers.sink.tty Determines whether containers in a pod runs with TTY enabled.
                ##
                tty: false

                ## @param common-res.Deployment.items._.podSpec.spec.containers.sink.stdin Determines whether containers in a pod runs with stdin enabled.
                ##
                stdin: false

                ## Container ports configuration
                ##
                ports:
                  ## @param common-res.Deployment.items._.podSpec.spec.containers.sink.ports[0].name Name of the port
                  ##
                  - name: http
                    ## @param common-res.Deployment.items._.podSpec.spec.containers.sink.ports[0].containerPort The port number
                    ##
                    containerPort: 8083

                    ## @param common-res.Deployment.items._.podSpec.spec.containers.sink.ports[0].protocol Port protocol. Allowed values: "SCTP", `TCP` and `UDP`.
                    ##
                    protocol: TCP

                  ## @param common-res.Deployment.items._.podSpec.spec.containers.sink.ports[1].name Name of the port
                  - name: metrics
                    ## @param common-res.Deployment.items._.podSpec.spec.containers.sink.ports[1].containerPort The port number
                    ##
                    containerPort: 9000
                    ## @param common-res.Deployment.items._.podSpec.spec.containers.sink.ports[1].protocol Port protocol
                    ##
                    protocol: TCP

                # ## Liveness probe configuration
                # ##
                # livenessProbe:
                #   httpGet:
                #     ## @param common-res.Deployment.items._.podSpec.spec.containers.sink.livenessProbe.httpGet.port Liveness probe port
                #     ##
                #     port: 3000
                #     ## @param common-res.Deployment.items._.podSpec.spec.containers.sink.livenessProbe.httpGet.scheme Liveness probe connection protocol
                #     ##
                #     scheme: HTTP
                #     ## @param common-res.Deployment.items._.podSpec.spec.containers.sink.livenessProbe.httpGet.path If a HTTP probe is used (default for HTTP/HTTPS services) this path is used
                #     ##
                #     path: "/"
                #   ## @param common-res.Deployment.items._.podSpec.spec.containers.sink.livenessProbe.initialDelaySeconds Initial delay in seconds
                #   ##
                #   initialDelaySeconds: 10
                #   ## @param common-res.Deployment.items._.podSpec.spec.containers.sink.livenessProbe.periodSeconds period in seconds
                #   ##
                #   periodSeconds: 10
                #   ## @param common-res.Deployment.items._.podSpec.spec.containers.sink.livenessProbe.timeoutSeconds Timeout in seconds
                #   ##
                #   timeoutSeconds: 5
                #   ## @param common-res.Deployment.items._.podSpec.spec.containers.sink.livenessProbe.failureThreshold max number of failures in a row for flagging pod as unhealthy
                #   ##
                #   failureThreshold: 5
                #   ## @param common-res.Deployment.items._.podSpec.spec.containers.sink.livenessProbe.successThreshold max number of successes in a row for flagging pod as healthy
                #   ##
                #   successThreshold: 1

                # ## Readiness probe configuration
                # ##
                # readinessProbe:
                #   httpGet:
                #     ## @param common-res.Deployment.items._.podSpec.spec.containers.sink.readinessProbe.httpGet.port readiness probe port
                #     ##
                #     port: 3000
                #     ## @param common-res.Deployment.items._.podSpec.spec.containers.sink.readinessProbe.httpGet.scheme readiness probe connection protocol
                #     ##
                #     scheme: HTTP
                #     ## @param common-res.Deployment.items._.podSpec.spec.containers.sink.readinessProbe.httpGet.path If a HTTP probe is used (default for HTTP/HTTPS services) this path is used
                #     ##
                #     path: "/"
                #   ## @param common-res.Deployment.items._.podSpec.spec.containers.sink.readinessProbe.initialDelaySeconds Initial delay in seconds
                #   ##
                #   initialDelaySeconds: 10
                #   ## @param common-res.Deployment.items._.podSpec.spec.containers.sink.readinessProbe.periodSeconds period in seconds
                #   ##
                #   periodSeconds: 10
                #   ## @param common-res.Deployment.items._.podSpec.spec.containers.sink.readinessProbe.timeoutSeconds Timeout in seconds
                #   ##
                #   timeoutSeconds: 5
                #   ## @param common-res.Deployment.items._.podSpec.spec.containers.sink.readinessProbe.failureThreshold max number of failures in a row for flagging pod as not ready
                #   ##
                #   failureThreshold: 5
                #   ## @param common-res.Deployment.items._.podSpec.spec.containers.sink.readinessProbe.successThreshold max number of successes in a row for flagging pod as ready
                #   ##
                #   successThreshold: 2

                # ## Startup probe configuration
                # ##
                # startupProbe:
                #   tcpSocket:
                #     ## @param common-res.Deployment.items._.podSpec.spec.containers.sink.startupProbe.tcpSocket.port startup probe port
                #     ##
                #     port: 3000
                #   ## @param common-res.Deployment.items._.podSpec.spec.containers.sink.startupProbe.initialDelaySeconds Initial delay in seconds
                #   ##
                #   initialDelaySeconds: 10
                #   ## @param common-res.Deployment.items._.podSpec.spec.containers.sink.startupProbe.periodSeconds period in seconds
                #   ##
                #   periodSeconds: 5
                #   ## @param common-res.Deployment.items._.podSpec.spec.containers.sink.startupProbe.timeoutSeconds Timeout in seconds
                #   ##
                #   timeoutSeconds: 2
                #   ## @param common-res.Deployment.items._.podSpec.spec.containers.sink.startupProbe.failureThreshold max number of failures in a row for flagging pod as not started
                #   ##
                #   failureThreshold: 60
                #   ## @param common-res.Deployment.items._.podSpec.spec.containers.sink.startupProbe.successThreshold max number of successes in a row for flagging pod as started
                #   ##
                #   successThreshold: 1

                ## Set the resource requests / limits for the main container.
                ##
                resources:
                  ## Resource limits configuration
                  ##
                  limits:
                    ## @param common-res.Deployment.items._.podSpec.spec.containers.sink.resources.limits.cpu CPU limits
                    ##
                    cpu: '3'
                    ## @param common-res.Deployment.items._.podSpec.spec.containers.sink.resources.limits.memory Memory limits
                    ##
                    memory: '8Gi'

                  ## Resource Requests configurations
                  ##
                  requests:
                    ## @param common-res.Deployment.items._.podSpec.spec.containers.sink.resources.requests.cpu CPU requests
                    ##
                    cpu: '2'
                    ## @param common-res.Deployment.items._.podSpec.spec.containers.sink.resources.requests.memory Memory requests
                    ##
                    memory: '8Gi'

                ## Security context configuration
                ##
                securityContext:
                  ## @param common-res.Deployment.items._.podSpec.spec.containers.sink.securityContext.runAsGroup Specify the default user group id
                  ##
                  runAsGroup: 99
                  ## @param common-res.Deployment.items._.podSpec.spec.containers.sink.securityContext.runAsUser Specify the default user id
                  ##
                  runAsUser: 99
                  ## @param common-res.Deployment.items._.podSpec.spec.containers.sink.securityContext.privileged Privileged mode true or false. Allowed values: `true` or `false`
                  ##
                  privileged: false
                  ## @param common-res.Deployment.items._.podSpec.spec.containers.sink.securityContext.readOnlyRootFilesystem Access level for the file system.  Allowed values: `true` or `false`
                  ##
                  readOnlyRootFilesystem: false
                  ## @param common-res.Deployment.items._.podSpec.spec.containers.sink.securityContext.allowPrivilegeEscalation Allow escalation of privileges true or false. Allowed values: `true` or `false`
                  ##
                  allowPrivilegeEscalation: false
                  ## @param common-res.Deployment.items._.podSpec.spec.containers.sink.securityContext.runAsNonRoot Run the process as root, true or false. Allowed values: `true` or `false`
                  ##
                  runAsNonRoot: true
                  seccompProfile:
                    ## @param common-res.Deployment.items._.podSpec.spec.containers.sink.securityContext.seccompProfile.type Seccomp profile type
                    ##
                    type: RuntimeDefault
                  ## Linux pod capabilities configurations
                  ## https://man7.org/linux/man-pages/man7/capabilities.7.html
                  ##
                  capabilities:
                    ## @param common-res.Deployment.items._.podSpec.spec.containers.sink.securityContext.capabilities.drop Capabilities to drop
                    ##
                    drop:
                      - ALL
                    ## @param common-res.Deployment.items._.podSpec.spec.containers.sink.securityContext.capabilities.add Capabilities to add
                    ##
                    add: []

                ## Env configuration
                ## @skip common-res.Deployment.items._.podSpec.spec.containers.sink.env
                ##
                env:
                  - name: POD_NAME
                    valueFrom:
                      fieldRef:
                        apiVersion: v1
                        fieldPath: metadata.name
                  - name: NODE_ID
                    valueFrom:
                      fieldRef:
                        apiVersion: v1
                        fieldPath: metadata.name
                  - name: NAMESPACE
                    valueFrom:
                      fieldRef:
                        apiVersion: v1
                        fieldPath: metadata.namespace
                  - name: DEPLOYMENT_NAME
                    valueFrom:
                      fieldRef:
                        apiVersion: v1
                        fieldPath: metadata.labels['app']
                        # Note: if there are multiple deployments, deployment level label should be picked
                  - name: CONNECT_CONSUMER_SSL_KEY_PASSWORD
                    valueFrom:
                      secretKeyRef:
                        name: 'testfmkafka'
                        key: 'user.password'
                  - name: CONNECT_CONSUMER_SSL_KEYSTORE_PASSWORD
                    valueFrom:
                      secretKeyRef:
                        name: 'testfmkafka'
                        key: 'user.password'
                  - name: CONNECT_CONSUMER_SSL_TRUSTSTORE_PASSWORD
                    valueFrom:
                      secretKeyRef:
                        name: 'kafka-cluster-cluster-ca-cert'
                        key: 'ca.password'
                  - name: CONNECT_PRODUCER_SSL_KEY_PASSWORD
                    valueFrom:
                      secretKeyRef:
                        name: 'testfmkafka'
                        key: 'user.password'
                  - name: CONNECT_PRODUCER_SSL_KEYSTORE_PASSWORD
                    valueFrom:
                      secretKeyRef:
                        name: 'testfmkafka'
                        key: 'user.password'
                  - name: CONNECT_PRODUCER_SSL_TRUSTSTORE_PASSWORD
                    valueFrom:
                      secretKeyRef:
                        name: 'kafka-cluster-cluster-ca-cert'
                        key: 'ca.password'
                  - name: CONNECT_SSL_KEYSTORE_PASSWORD
                    valueFrom:
                      secretKeyRef:
                        name: 'testfmkafka'
                        key: 'user.password'
                  - name: CONNECT_SSL_TRUSTSTORE_PASSWORD
                    valueFrom:
                      secretKeyRef:
                        name: 'kafka-cluster-cluster-ca-cert'
                        key: 'ca.password'
                  - name: CLIENT_CERTIFICATE_PASSWORD
                    valueFrom:
                      secretKeyRef:
                        name: 'jks-password'
                        key: 'password'
                  - name: SERVER_CERTIFICATE_PASSWORD
                    valueFrom:
                      secretKeyRef:
                        name: 'jks-password'
                        key: 'password'

                ## @skip common-res.Deployment.items._.podSpec.spec.containers.sink.envFrom
                ##
                envFrom:
                  - configMapRef:
                      name: '{{ include "common-gitops.names.release" . }}'
                  - secretRef:
                      name: '{{ include "common-gitops.names.release" . }}'
                  - configMapRef:
                      name: 'testfm-backend'

                ## Default Volume mounts
                ## @skip common-res.Deployment.items._.podSpec.spec.containers.sink.volumeMounts
                ##
                volumeMounts:
                  - name: devshm
                    mountPath: /dev/shm
                    readOnly: false
                  - name: shared
                    mountPath: /shared
                    readOnly: false
                  - name: appdata
                    # This mountPath should be set to a dir where service generates temporary data
                    mountPath: /home/node
                    readOnly: false
                  - name: varrun
                    mountPath: /var/run
                    readOnly: false
                  - name: truststore-secret-volume
                    mountPath: /data/kafka/truststore
                    readOnly: false
                    mountPropagation: None
                  - name: keystore-secret-volume
                    mountPath: /data/kafka/keystore
                    readOnly: false
                    mountPropagation: None
                  - name: server-cert-secret-volume
                    mountPath: /data/server
                    readOnly: false
                    mountPropagation: None
                  - name: client-cert-secret-volume
                    mountPath: /data/client
                    readOnly: false
                    mountPropagation: None
                  - name: redis-secret
                    mountPath: /data/redis
                    readOnly: false
                    mountPropagation: None
                  - name: spark-secret
                    mountPath: /data/spark
                    readOnly: false
                    mountPropagation: None
                  - name: application-creds
                    mountPath: /data/application-creds
                    readOnly: false
                    mountPropagation: None
                  - name: tunnel-creds
                    mountPath: /data/tunnel-creds
                    readOnly: false
                    mountPropagation: None    ## Pod Volumes configuration

            ## @skip common-res.Deployment.items._.podSpec.spec.volumes
            volumes:
              - name: devshm
                emptyDir:
                  medium: Memory
              - name: varrun
                emptyDir:
                  medium: Memory
              - name: shared
                emptyDir: {}
              - name: appdata
                # This should be mapped to ephemeral storage or EBS volume to avoid nodes running out of disk space
                emptyDir: {}
              - name: "truststore-secret-volume"
                secret:
                  secretName: "kafka-cluster-cluster-ca-cert"
                  defaultMode: 420
                  optional: false
              - name: "keystore-secret-volume"
                secret:
                  secretName: "testfmkafka"
                  defaultMode: 420
                  optional: false
              - name: "server-cert-secret-volume"
                secret:
                  secretName: "server-tls"
                  defaultMode: 420
                  optional: false
              - name: "client-cert-secret-volume"
                secret:
                  secretName: "client-tls"
                  defaultMode: 420
                  optional: false
              # Q: Do we need this?
              - name: "redis-secret"
                secret:
                  secretName: "redis-server-tls"
                  defaultMode: 420
                  optional: false
              # Q: Do we need this?
              - name: "spark-secret"
                secret:
                  secretName: "spark-server-tls"
                  defaultMode: 420
                  optional: false
              # Q: Do we need this?
              - name: "application-creds"
                secret:
                  secretName: "application-creds"
                  defaultMode: 420
                  optional: false
              # Q: Do we need this?
              - name: "tunnel-creds"
                secret:
                  secretName: "tunnel-creds"
                  defaultMode: 420
                  optional: false

  ## Configure configMaps for the chart here.
  ##
  ConfigMap:
    ## @param common-res.ConfigMap.enabled Enable or Disable the configmap from being created. Allowed values: `true` or `false`
    ##
    enabled: true
    ## Chart config variables
    ##
    items:
      _:
        data:
          ## @param common-res.ConfigMap.items._.data.CONNECT_GROUP_ID Kafka Connect Group ID
          ##
          CONNECT_GROUP_ID: "connect-group--pod-abcdef--"
          ## @param common-res.ConfigMap.items._.data.CONNECT_OFFSET_STORAGE_TOPIC Kafka Connect Offset Storage Topic
          ##
          CONNECT_OFFSET_STORAGE_TOPIC: "connect-offset--pod-abcdef--"
          ## @param common-res.ConfigMap.items._.data.CONNECT_CONFIG_STORAGE_TOPIC Kafka Connect Config Storage Topic
          ##
          CONNECT_CONFIG_STORAGE_TOPIC: "connect-config--pod-abcdef--"
          ## @param common-res.ConfigMap.items._.data.CONNECT_STATUS_STORAGE_TOPIC Kafka Connect Status Storage Topic
          ##
          CONNECT_STATUS_STORAGE_TOPIC: "connect-status--pod-abcdef--"
          ## @param common-res.ConfigMap.items._.data.ENDPOINT_CTRL_ALL_TASKS Endpoint for controlling all tasks
          ##
          ENDPOINT_CTRL_ALL_TASKS: "https://ctrl-copy.{{ .Release.Namespace }}.svc.cluster.local:8080/tasks_to_run/s"
          ## @param common-res.ConfigMap.items._.data.ENDPOINT_CTRL_NUMBER_TASKS Endpoint for controlling the number of tasks
          ##
          ENDPOINT_CTRL_NUMBER_TASKS: "https://ctrl-copy.{{ .Release.Namespace }}.svc.cluster.local:8080/number_of_running_tasks_of_size/s/dev-connectors-sinks-s"
          ## @param common-res.ConfigMap.items._.data.ENDPOINT_CTRL_UPDATE_TASK_STATUS Endpoint for updating task status
          ##
          ENDPOINT_CTRL_UPDATE_TASK_STATUS: "https://ctrl-copy.{{ .Release.Namespace }}.svc.cluster.local:8080/update_task_status"
          ## @param common-res.ConfigMap.items._.data.KAFKA_HEAP_OPTS Kafka heap options
          ##
          KAFKA_HEAP_OPTS: -Xmx7g -Xms7g -XX:+HeapDumpOnOutOfMemoryError -XX:+PrintFlagsFinal -XX:+UseG1GC -XX:MaxGCPauseMillis=500 -XX:+DisableExplicitGC -XX:+UseStringDeduplication

  ## Configure secrets for the chart here.
  ##
  Secret:
    ## @param common-res.Secret.enabled Enable or Disable the secret from being created.
    ##
    enabled: true
    ## Chart secret variables
    ##
    items:
      _:
        stringData:
          ## @skip common-res.Secret.items._.stringData.dummy
          ##
          dummy: "dummy"

  ## Configure the services for the chart here.
  ## Additional services can be added by adding a dictionary key similar to the 'main' service.
  ## @default -- See below
  Service:
    ## Service configuration for main pod
    ##
    items:
      _:
        ## @param common-res.Service.items._.enabled Enables or disables the service
        ##
        enabled: true
        spec:
          ## @param common-res.Service.items._.spec.selector Additional selectors
          ##
          selector: {}

          ## @param common-res.Service.items._.spec.type Set the service type
          # Options: Simple(Loadbalancer), LoadBalancer, ClusterIP, NodePort
          ##
          type: ClusterIP

          ## @param common-res.Service.items._.spec.ipFamilyPolicy Specify the ip policy. Options: SingleStack, PreferDualStack, RequireDualStack
          ##
          ipFamilyPolicy: SingleStack

          ## Configure the Service port information here.
          ## Additional ports can be added by adding a dictionary key similar to the 'http' service.
          ## @default -- See below
          ##
          ports:
            ## @param common-res.Service.items._.spec.ports[0].name The port number
            ##
            - name: http
              ## @param common-res.Service.items._.spec.ports[0].port The port number
              ##
              port: 3000

              ## @param common-res.Service.items._.spec.ports[0].protocol Port protocol. Allowed values: `TCP`, `SCTP` or `UDP`.
              ##
              protocol: TCP

              ## @param common-res.Service.items._.spec.ports[0].targetPort Specify a service targetPort if you wish to differ the service port from the application port.
              ## If `targetPort` is specified, this port number is used in the container definition instead of
              ## the `port` value. Therefore named ports are not supported for this field.
              ##
              targetPort: 3000

  ## HPA configuration
  ##
  HorizontalPodAutoscaler:
    ## @param common-res.HorizontalPodAutoscaler.enabled Toggle for enabling or disabling template.
    ##
    enabled: true
    ## Main deployment HPA settings
    ##
    items:
      _:
        spec:
          ## Scale Target
          ##
          scaleTargetRef:
            ## @param common-res.HorizontalPodAutoscaler.items._.spec.scaleTargetRef.apiVersion Target kind API Version
            ##
            apiVersion: apps/v1
            ## @param common-res.HorizontalPodAutoscaler.items._.spec.scaleTargetRef.kind Target kind
            ##
            kind: Deployment
            ## @param common-res.HorizontalPodAutoscaler.items._.spec.scaleTargetRef.name Target kind name
            ##
            name: '{{ include "common-gitops.names.release" . }}'
          ## @param common-res.HorizontalPodAutoscaler.items._.spec.minReplicas minimum amount of replica's to spawn
          ## default -- 1
          ##
          minReplicas: 1
          ## @param common-res.HorizontalPodAutoscaler.items._.spec.maxReplicas maximum amount of replica's to spawn
          ## default -- 10
          ##
          maxReplicas: 10
          ## Target metrics
          ##
          metrics:
            ## @skip common-res.HorizontalPodAutoscaler.items._.spec.metrics[0].type Metrics type
            ##
            - type: Object
              object:
                metric:
                  ## @param common-res.HorizontalPodAutoscaler.items._.spec.metrics[0].object.metric.name Metric name
                  ##
                  # - seriesQuery: 'custom_metric_current_sink_tasks{namespace!="",deployment=~".*"}'
                  #   resources:
                  #     overrides:
                  #       namespace:
                  #         resource: namespace
                  #       deployment:
                  #         resource: deployment
                  #   metricsQuery: 'max(custom_metric_current_sink_tasks) by (namespace, deployment)'
                  name: custom_metric_current_sink_tasks
                ## @skip common-res.HorizontalPodAutoscaler.items._.spec.metrics[0].object.describedObject Described object
                ##
                describedObject:
                  apiVersion: apps/v1
                  kind: Deployment
                  name: '{{ include "common-gitops.names.release" . }}'
                target:
                  ## @param common-res.HorizontalPodAutoscaler.items._.spec.metrics[0].object.target.type Metric target type
                  ##
                  type: Value
                  ## @param common-res.HorizontalPodAutoscaler.items._.spec.metrics[0].object.target.value Metric target value
                  ##
                  value: 1

  # ## PodDisruptionBudget configuration
  # ##
  # PodDisruptionBudget:
  #   ## @param common-res.PodDisruptionBudget.enabled Toggle for enabling or disabling template.
  #   ##
  #   enabled: true
  #   ## Main deployment PDB settings
  #   ##
  #   items:
  #     _:
  #       spec:
  #         ## @param common-res.PodDisruptionBudget.items._.spec.minAvailable Minimum number of available pods
  #         ##
  #         minAvailable: 1

prometheus-service-discovery:
  enabled: true
